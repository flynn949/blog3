geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)#+
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
mdata %>%
filter(group %in% seq(1,8)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
mdata %>%
filter(group %in% seq(1,9)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
mdata <- multibin(n = 5000,
J = 20,
beta1 = 1.6, #3.2
beta2 = -0.7,
jstd = 1.5)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
var(mdata$ystar - mdata$yprob)
var(mdata$ystar - mdata$yprob) - (pi*pi)/3
(var(mdata$ystar - mdata$yprob) - (pi*pi)/3)/var(mdata$ystar - mdata$yprob)
mmod1 <- glmer(yobs ~ x1 + x2 + (1 | group),
data = mdata,
family = "binomial")
summary(mmod1)
ranef(mmod1)
groupintercepts <- data.frame(group = seq(1,20), intercept = ranef(mmod1))
head(groupintercepts)
groupintercepts <- data.frame(group = seq(1,20), intercept = ranef(mmod1)[1])
head(groupintercepts)
groupintercepts <- data.frame(group = seq(1,20), "intercept" = ranef(mmod1)[1])
head(groupintercepts)
groupintercepts <- data.frame(group = seq(1,20), "intercept" = ranef(mmod1)[,1])
groupintercepts <- data.frame(group = seq(1,20), "intercept" = ranef(mmod1)[1])
ranef(mmod1)[1]
ranef(mmod1)[[1]]
groupintercepts <- data.frame(group = seq(1,20), intercept = ranef(mmod1)[[1]])
head(groupintercepts)
groupintercepts <- data.frame(group = seq(1,20), intercept = c(ranef(mmod1)[[1]]))
head(groupintercepts)
View(groupintercepts)
groupintercepts <- data.frame(group = seq(1,20), intercept = ranef(mmod1)[1])
View(groupintercepts)
colnames(groupintercepts) <- c("group", "intercept")
View(groupintercepts)
mdata <- left_join(mdata, groupintercepts, by = "group")
mdata$predicted <- predict(mmod1, new_data = mdata)
mdata$predicted <- predict(mmod1, data = mdata)
mdata$predicted <- predict(mmod1, mdata)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = x2))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = x2))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)#+
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)#+
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(lme4)
library(tidyverse)
x <- seq(-10,10,0.01)
pl <- plogis(x, location = 0, scale = 1)
nl<- pnorm(x, mean = 0, sd = sqrt(pi*pi/3))
plot(x,pl,t="l")
lines(x, nl, col="red")
set.seed(42)
multibin <- function(n, J, beta1, beta2, jstd){
x1 <- rnorm(n,0,1) #standardised continuous predictor variable
x2 <- sample(c(0,1),n,replace=TRUE) #binary predictor variable
group <- sample(J, n, replace=TRUE) #group membership indicator
uj <- rnorm(J,0,jstd) #Group intercepts, normally distributed with standard deviation jstd
yprob <- rep(NA,n)
for (i in 1:n){
yprob[i] <- x1[i]*beta1 + x2[i]*beta2 #calculate yprob including only the population (fixed) effects.
}
ystar <- rlogis(n,yprob,1) # var(ystar - yprob) = 3.29
for (i in 1:n){
ystar[i] <- ystar[i] + uj[group[i]] #Add the group effect to ystar
}
yobs <- ifelse(ystar >= 0, 1, 0) #Get the binary outcome using the threshold test
return(data.frame(x1, x2, group, yprob, ystar, yobs))
}
mdata <- multibin(n = 5000,
J = 20,
beta1 = 1.6, #3.2
beta2 = -0.7,
jstd = 1.5)
head(mdata)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
var(mdata$ystar - mdata$yprob)
var(mdata$ystar - mdata$yprob) - (pi*pi)/3
(var(mdata$ystar - mdata$yprob) - (pi*pi)/3)/var(mdata$ystar - mdata$yprob)
mmod1 <- glmer(yobs ~ x1 + x2 + (1 | group),
data = mdata,
family = "binomial")
summary(mmod1)
mdata$predicted <- predict(mmod1, mdata)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
scale_x_continuous(limits = c(-2,2))+
theme_bw(14)+
facet_wrap(~Group)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
scale_x_continuous(limits = c(-1,1))+
theme_bw(14)+
facet_wrap(~Group)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
scale_x_continuous(limits = c(-2,2))+
theme_bw(14)+
facet_wrap(~Group)
1.5*1.5
library(blogdown)
serve_site()
library(blogdown)
serve_site()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(lme4)
library(tidyverse)
x <- seq(-10,10,0.01)
pl <- plogis(x, location = 0, scale = 1)
nl<- pnorm(x, mean = 0, sd = sqrt(pi*pi/3))
plot(x,pl,t="l")
lines(x, nl, col="red")
set.seed(42)
multibin <- function(n, J, beta1, beta2, jstd){
x1 <- rnorm(n,0,1) #standardised continuous predictor variable
x2 <- sample(c(0,1),n,replace=TRUE) #binary predictor variable
group <- sample(J, n, replace=TRUE) #group membership indicator
uj <- rnorm(J,0,jstd) #Group intercepts, normally distributed with standard deviation jstd
yprob <- rep(NA,n)
for (i in 1:n){
yprob[i] <- x1[i]*beta1 + x2[i]*beta2 #calculate yprob including only the population (fixed) effects.
}
ystar <- rlogis(n,yprob,1) # var(ystar - yprob) = 3.29
for (i in 1:n){
ystar[i] <- ystar[i] + uj[group[i]] #Add the group effect to ystar
}
yobs <- ifelse(ystar >= 0, 1, 0) #Get the binary outcome using the threshold test
return(data.frame(x1, x2, group, yprob, ystar, yobs))
}
group <- sample(20,5000,replace=TRUE)
runif(20)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
table(x2, useNA = "always")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(lme4)
library(tidyverse)
x <- seq(-10,10,0.01)
pl <- plogis(x, location = 0, scale = 1)
nl<- pnorm(x, mean = 0, sd = sqrt(pi*pi/3))
plot(x,pl,t="l")
lines(x, nl, col="red")
set.seed(42)
multibin <- function(n, J, beta1, beta2, jstd){
group <- sample(J, n, replace=TRUE) #group membership indicator
x1 <- rnorm(n,0,1) #standard continuous predictor variable
x2 <- rep(NA,length(group))
group_probs <- runif(20) #probability of x2=1 for members of each group
for (i in 1:length(group)){
x2[i] <- sample(c(0,1), prob = c(1 - group_probs[group[i]], group_probs[group[i]]))
}
#x2 <- sample(c(0,1), n, replace=TRUE) #binary predictor variable
uj <- rnorm(J,0,jstd) #Group intercepts, normally distributed with standard deviation jstd
yprob <- rep(NA,n)
for (i in 1:n){
yprob[i] <- x1[i]*beta1 + x2[i]*beta2 #calculate yprob including only the population (fixed) effects.
}
ystar <- rlogis(n,yprob,1) # var(ystar - yprob) = 3.29
for (i in 1:n){
ystar[i] <- ystar[i] + uj[group[i]] #Add the group effect to ystar
}
yobs <- ifelse(ystar >= 0, 1, 0) #Get the binary outcome using the threshold test
return(data.frame(x1, x2, group, yprob, ystar, yobs))
}
mdata <- multibin(n = 5000,
J = 20,
beta1 = 1.6, #3.2
beta2 = -0.7,
jstd = 1.5)
head(mdata)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
var(mdata$ystar - mdata$yprob)
var(mdata$ystar - mdata$yprob) - (pi*pi)/3
(var(mdata$ystar - mdata$yprob) - (pi*pi)/3)/var(mdata$ystar - mdata$yprob)
mmod1 <- glmer(yobs ~ x1 + x2 + (1 | group),
data = mdata,
family = "binomial")
summary(mmod1)
mdata$predicted <- predict(mmod1, mdata)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
scale_x_continuous(limits = c(-2,2))+
theme_bw(14)+
facet_wrap(~Group)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(lme4)
library(tidyverse)
x <- seq(-10,10,0.01)
pl <- plogis(x, location = 0, scale = 1)
nl<- pnorm(x, mean = 0, sd = sqrt(pi*pi/3))
plot(x,pl,t="l")
lines(x, nl, col="red")
set.seed(1)
multibin <- function(n, J, beta1, beta2, jstd){
group <- sample(J, n, replace=TRUE) #group membership indicator
x1 <- rnorm(n,0,1) #standard continuous predictor variable
x2 <- rep(NA,length(group))
group_probs <- runif(20) #probability of x2=1 for members of each group
for (i in 1:length(group)){
x2[i] <- sample(c(0,1), prob = c(1 - group_probs[group[i]], group_probs[group[i]]))
}
#x2 <- sample(c(0,1), n, replace=TRUE) #binary predictor variable
uj <- rnorm(J,0,jstd) #Group intercepts, normally distributed with standard deviation jstd
yprob <- rep(NA,n)
for (i in 1:n){
yprob[i] <- x1[i]*beta1 + x2[i]*beta2 #calculate yprob including only the population (fixed) effects.
}
ystar <- rlogis(n,yprob,1) # var(ystar - yprob) = 3.29
for (i in 1:n){
ystar[i] <- ystar[i] + uj[group[i]] #Add the group effect to ystar
}
yobs <- ifelse(ystar >= 0, 1, 0) #Get the binary outcome using the threshold test
return(data.frame(x1, x2, group, yprob, ystar, yobs))
}
mdata <- multibin(n = 5000,
J = 20,
beta1 = 1.6, #3.2
beta2 = -0.7,
jstd = 1.5)
head(mdata)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
theme_bw(14)+
facet_wrap(~Group)
var(mdata$ystar - mdata$yprob)
var(mdata$ystar - mdata$yprob) - (pi*pi)/3
(var(mdata$ystar - mdata$yprob) - (pi*pi)/3)/var(mdata$ystar - mdata$yprob)
mmod1 <- glmer(yobs ~ x1 + x2 + (1 | group),
data = mdata,
family = "binomial")
summary(mmod1)
mdata$predicted <- predict(mmod1, mdata)
mdata %>%
filter(group %in% seq(1,4)) %>%
mutate(Group = paste0("Group ", group)) %>%
group_by(Group) %>%
sample_n(100) %>%
ggplot()+
aes(x = x1, y = ystar, col = factor(Group), shape = factor(x2))+
geom_hline(yintercept = 0, col = "grey", linetype = "dashed")+
geom_point(alpha = 0.3)+
geom_point(aes(x = x1, y = yobs), size = 1.5)+
geom_line(aes(x = x1, y = predicted, group = interaction(x2,group)))+
scale_colour_discrete(guide = FALSE)+
scale_shape_discrete(name = "x2")+
scale_x_continuous(limits = c(-2,2))+
theme_bw(14)+
facet_wrap(~Group)
table(mdata$group, mdata$x2)
library(blogdown)
serve_site()
library(blogdown)
blogdown:::new_post_addin()
serve_site()
serve_site()
library(blogdown)
serve_site()
#Simulate data
set.seed(42)
mu <- c(300,460)
sigma <- c(50,100)
lambda <- 0.57
xgroup <- sample(c(1,2), 10000, prob = c(lambda, 1 - lambda), replace = TRUE)
x <- rnorm(500, mu[xgroup], sigma[xgroup])
hist(x, breaks = 25)
#Fit the model, as specified in the file 'bimodal.stan'.
library(rstan)
mod <- stan(file = "bimodal.stan",data = list(N = length(x), x = x),
chains = 4, cores = 1, warmup = 300, iter = 1000,verbose = FALSE, refresh = -1)
plot(mod, pars = "mu")
plot(mod, pars = "std")
plot(mod, pars="lambda")
summary(mod)
summary(mod, pars = c("mu", "std", "lambda"))
summary(mod, pars = c("mu", "std", "lambda"), probs = 0.975)
summary(mod, pars = c("mu", "std", "lambda"), probs = 0.975)$`summary`
summary(mod, pars = c("mu", "std", "lambda"), probs = c(0.025, 0.975))$`summary`
library(blogdown)
serve_site()
set.seed(42)
mu <- c(300,460)
sigma <- c(50,100)
lambda <- 0.57
nobs <- 500
#assign an underlying distribution for each observation.
#The probability of being in one distribution or the other is given by lambda.
xgroup <- sample(c(1,2), nobs, prob = c(lambda, 1 - lambda), replace = TRUE)
#generate the set of observations
x <- rnorm(nobs, mu[xgroup], sigma[xgroup])
hist(x, breaks = 25)
library(blogdown)
serve_site()
